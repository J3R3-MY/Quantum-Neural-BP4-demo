1_0.02
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 1_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
1
Before pruning: tensor([[[0.8952],
         [1.0612],
         [0.9508],
         ...,
         [1.0777],
         [0.9167],
         [1.0401]]], device='cuda:0')
After pruning: tensor([[[0.8952],
         [1.0612],
         [0.9508],
         ...,
         [1.0777],
         [0.9167],
         [1.0401]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 1_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

1_0.04
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 1_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
1
Before pruning: tensor([[[1.0470],
         [1.0390],
         [0.9586],
         ...,
         [1.1086],
         [0.8837],
         [1.0038]]], device='cuda:0')
After pruning: tensor([[[1.0470],
         [1.0390],
         [0.9586],
         ...,
         [1.1086],
         [0.8837],
         [1.0038]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 1_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

1_0.08
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 1_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
1
Before pruning: tensor([[[1.0190],
         [1.0493],
         [1.0241],
         ...,
         [1.1970],
         [0.8301],
         [1.0649]]], device='cuda:0')
After pruning: tensor([[[1.0190],
         [1.0493],
         [1.0241],
         ...,
         [1.1970],
         [0.0000],
         [1.0649]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 1_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

1_0.16
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 1_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
1
Before pruning: tensor([[[1.0247],
         [0.9951],
         [0.9906],
         ...,
         [1.0059],
         [0.9090],
         [0.9602]]], device='cuda:0')
After pruning: tensor([[[1.0247],
         [0.9951],
         [0.9906],
         ...,
         [1.0059],
         [0.0000],
         [0.9602]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 1_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

1_0.32
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 1_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
1
Before pruning: tensor([[[1.0010],
         [1.0951],
         [1.0275],
         ...,
         [0.9629],
         [0.7102],
         [1.0029]]], device='cuda:0')
After pruning: tensor([[[1.0010],
         [1.0951],
         [1.0275],
         ...,
         [0.0000],
         [0.0000],
         [1.0029]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 1_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

2_0.02
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 2_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
2
Before pruning: tensor([[[0.9883],
         [0.9992],
         [1.0315],
         ...,
         [0.9360],
         [0.8760],
         [0.9963]]], device='cuda:0')
After pruning: tensor([[[0.9883],
         [0.9992],
         [1.0315],
         ...,
         [0.9360],
         [0.8760],
         [0.9963]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 2_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
2
Before pruning: tensor([[[0.9883],
         [0.9992],
         [1.0315],
         ...,
         [0.9360],
         [0.8760],
         [0.9963]]], device='cuda:0')
After pruning: tensor([[[0.9467],
         [1.1818],
         [1.0780],
         ...,
         [0.7928],
         [0.0000],
         [0.9557]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 2_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

2_0.04
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 2_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
2
Before pruning: tensor([[[0.9406],
         [1.0367],
         [1.0415],
         ...,
         [0.9141],
         [0.8233],
         [1.0717]]], device='cuda:0')
After pruning: tensor([[[0.9406],
         [1.0367],
         [1.0415],
         ...,
         [0.9141],
         [0.0000],
         [1.0717]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 2_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
2
Before pruning: tensor([[[0.9406],
         [1.0367],
         [1.0415],
         ...,
         [0.9141],
         [0.0000],
         [1.0717]]], device='cuda:0')
After pruning: tensor([[[0.8796],
         [1.1959],
         [1.1193],
         ...,
         [1.1285],
         [0.0000],
         [1.0653]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 2_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

2_0.08
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 2_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
2
Before pruning: tensor([[[0.9276],
         [0.9891],
         [0.9987],
         ...,
         [1.0509],
         [0.7557],
         [0.9715]]], device='cuda:0')
After pruning: tensor([[[0.9276],
         [0.9891],
         [0.9987],
         ...,
         [1.0509],
         [0.0000],
         [0.9715]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 2_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
2
Before pruning: tensor([[[0.9276],
         [0.9891],
         [0.9987],
         ...,
         [1.0509],
         [0.0000],
         [0.9715]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.0905],
         [1.1703],
         ...,
         [1.0718],
         [0.0000],
         [0.9811]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 2_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

2_0.16
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 2_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
2
Before pruning: tensor([[[0.9381],
         [1.0489],
         [1.0798],
         ...,
         [1.0233],
         [0.8996],
         [1.0613]]], device='cuda:0')
After pruning: tensor([[[0.9381],
         [1.0489],
         [1.0798],
         ...,
         [1.0233],
         [0.0000],
         [1.0613]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 2_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
2
Before pruning: tensor([[[0.9381],
         [1.0489],
         [1.0798],
         ...,
         [1.0233],
         [0.0000],
         [1.0613]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.3158],
         [1.1149],
         ...,
         [0.9328],
         [0.0000],
         [1.2323]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 2_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

2_0.32
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 2_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
2
Before pruning: tensor([[[1.0311],
         [1.0278],
         [0.9402],
         ...,
         [1.0366],
         [0.8420],
         [1.0799]]], device='cuda:0')
After pruning: tensor([[[1.0311],
         [1.0278],
         [0.0000],
         ...,
         [1.0366],
         [0.0000],
         [1.0799]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 2_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
2
Before pruning: tensor([[[1.0311],
         [1.0278],
         [0.0000],
         ...,
         [1.0366],
         [0.0000],
         [1.0799]]], device='cuda:0')
After pruning: tensor([[[1.3694],
         [1.1494],
         [0.0000],
         ...,
         [1.0297],
         [0.0000],
         [1.0641]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 2_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

3_0.02
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
3
Before pruning: tensor([[[0.9819],
         [1.0612],
         [0.9826],
         ...,
         [1.0043],
         [0.7873],
         [1.0375]]], device='cuda:0')
After pruning: tensor([[[0.9819],
         [1.0612],
         [0.9826],
         ...,
         [1.0043],
         [0.0000],
         [1.0375]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
3
Before pruning: tensor([[[0.9819],
         [1.0612],
         [0.9826],
         ...,
         [1.0043],
         [0.0000],
         [1.0375]]], device='cuda:0')
After pruning: tensor([[[1.0276],
         [1.2329],
         [1.0048],
         ...,
         [1.1902],
         [0.0000],
         [1.1310]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
3
Before pruning: tensor([[[1.0276],
         [1.2329],
         [1.0048],
         ...,
         [1.1902],
         [0.0000],
         [1.1310]]], device='cuda:0')
After pruning: tensor([[[1.1285],
         [1.3139],
         [0.9754],
         ...,
         [1.1455],
         [0.0000],
         [1.0360]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

3_0.04
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
3
Before pruning: tensor([[[0.8498],
         [1.0275],
         [1.0713],
         ...,
         [1.0251],
         [0.9030],
         [0.9852]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.0275],
         [1.0713],
         ...,
         [1.0251],
         [0.9030],
         [0.9852]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
3
Before pruning: tensor([[[0.0000],
         [1.0275],
         [1.0713],
         ...,
         [1.0251],
         [0.9030],
         [0.9852]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.3151],
         [1.2650],
         ...,
         [1.1603],
         [0.0000],
         [1.0860]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
3
Before pruning: tensor([[[0.0000],
         [1.3151],
         [1.2650],
         ...,
         [1.1603],
         [0.0000],
         [1.0860]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.2132],
         [1.4165],
         ...,
         [1.1275],
         [0.0000],
         [1.0773]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

3_0.08
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
3
Before pruning: tensor([[[0.8676],
         [1.0155],
         [1.0477],
         ...,
         [0.9124],
         [0.7220],
         [1.0291]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.0155],
         [1.0477],
         ...,
         [0.9124],
         [0.0000],
         [1.0291]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
3
Before pruning: tensor([[[0.0000],
         [1.0155],
         [1.0477],
         ...,
         [0.9124],
         [0.0000],
         [1.0291]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.1882],
         [1.2318],
         ...,
         [0.0000],
         [0.0000],
         [0.9152]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
3
Before pruning: tensor([[[0.0000],
         [1.1882],
         [1.2318],
         ...,
         [0.0000],
         [0.0000],
         [0.9152]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.2123],
         [1.2851],
         ...,
         [0.0000],
         [0.0000],
         [0.7666]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

3_0.16
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
3
Before pruning: tensor([[[0.9129],
         [0.8843],
         [0.9197],
         ...,
         [0.9871],
         [0.8531],
         [1.0818]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [0.0000],
         ...,
         [0.9871],
         [0.0000],
         [1.0818]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
3
Before pruning: tensor([[[0.0000],
         [0.0000],
         [0.0000],
         ...,
         [0.9871],
         [0.0000],
         [1.0818]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [0.0000],
         ...,
         [1.0513],
         [0.0000],
         [1.1079]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
3
Before pruning: tensor([[[0.0000],
         [0.0000],
         [0.0000],
         ...,
         [1.0513],
         [0.0000],
         [1.1079]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [0.0000],
         ...,
         [0.9608],
         [0.0000],
         [0.9333]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

3_0.32
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
3
Before pruning: tensor([[[1.0379],
         [1.0603],
         [0.9452],
         ...,
         [1.0775],
         [0.7342],
         [0.9668]]], device='cuda:0')
After pruning: tensor([[[1.0379],
         [1.0603],
         [0.0000],
         ...,
         [1.0775],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
3
Before pruning: tensor([[[1.0379],
         [1.0603],
         [0.0000],
         ...,
         [1.0775],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[1.3384],
         [1.0803],
         [0.0000],
         ...,
         [0.9110],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
3
Before pruning: tensor([[[1.3384],
         [1.0803],
         [0.0000],
         ...,
         [0.9110],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[1.3588],
         [1.1256],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 3_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

4_0.02
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[0.9911],
         [0.9876],
         [1.0201],
         ...,
         [1.0957],
         [0.8845],
         [1.1072]]], device='cuda:0')
After pruning: tensor([[[0.9911],
         [0.9876],
         [1.0201],
         ...,
         [1.0957],
         [0.8845],
         [1.1072]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[0.9911],
         [0.9876],
         [1.0201],
         ...,
         [1.0957],
         [0.8845],
         [1.1072]]], device='cuda:0')
After pruning: tensor([[[0.9380],
         [1.0464],
         [0.9577],
         ...,
         [1.1114],
         [0.9844],
         [1.0605]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[0.9380],
         [1.0464],
         [0.9577],
         ...,
         [1.1114],
         [0.9844],
         [1.0605]]], device='cuda:0')
After pruning: tensor([[[1.0708],
         [1.1745],
         [1.0085],
         ...,
         [1.1689],
         [0.9175],
         [0.9565]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[1.0708],
         [1.1745],
         [1.0085],
         ...,
         [1.1689],
         [0.9175],
         [0.9565]]], device='cuda:0')
After pruning: tensor([[[1.1419],
         [1.4323],
         [1.0107],
         ...,
         [1.0701],
         [0.9822],
         [0.9759]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

4_0.04
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[0.9362],
         [0.9984],
         [0.9888],
         ...,
         [0.9173],
         [0.8522],
         [1.0166]]], device='cuda:0')
After pruning: tensor([[[0.9362],
         [0.9984],
         [0.9888],
         ...,
         [0.9173],
         [0.0000],
         [1.0166]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[0.9362],
         [0.9984],
         [0.9888],
         ...,
         [0.9173],
         [0.0000],
         [1.0166]]], device='cuda:0')
After pruning: tensor([[[1.0841],
         [1.1543],
         [0.9773],
         ...,
         [0.8241],
         [0.0000],
         [1.1086]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[1.0841],
         [1.1543],
         [0.9773],
         ...,
         [0.8241],
         [0.0000],
         [1.1086]]], device='cuda:0')
After pruning: tensor([[[1.2787],
         [1.0088],
         [1.3308],
         ...,
         [0.0000],
         [0.0000],
         [1.0286]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[1.2787],
         [1.0088],
         [1.3308],
         ...,
         [0.0000],
         [0.0000],
         [1.0286]]], device='cuda:0')
After pruning: tensor([[[1.4836],
         [1.1579],
         [1.4703],
         ...,
         [0.0000],
         [0.0000],
         [1.0389]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

4_0.08
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[0.9855],
         [1.0209],
         [0.9808],
         ...,
         [1.0719],
         [0.8125],
         [0.9546]]], device='cuda:0')
After pruning: tensor([[[0.9855],
         [1.0209],
         [0.9808],
         ...,
         [1.0719],
         [0.0000],
         [0.9546]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[0.9855],
         [1.0209],
         [0.9808],
         ...,
         [1.0719],
         [0.0000],
         [0.9546]]], device='cuda:0')
After pruning: tensor([[[1.1715],
         [1.2665],
         [1.0067],
         ...,
         [1.0129],
         [0.0000],
         [1.0432]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[1.1715],
         [1.2665],
         [1.0067],
         ...,
         [1.0129],
         [0.0000],
         [1.0432]]], device='cuda:0')
After pruning: tensor([[[1.4055],
         [1.4565],
         [1.0798],
         ...,
         [0.9702],
         [0.0000],
         [0.9461]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[1.4055],
         [1.4565],
         [1.0798],
         ...,
         [0.9702],
         [0.0000],
         [0.9461]]], device='cuda:0')
After pruning: tensor([[[1.6149],
         [1.6222],
         [1.1899],
         ...,
         [1.0325],
         [0.0000],
         [0.9409]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

4_0.16
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[0.9474],
         [1.0629],
         [0.9922],
         ...,
         [1.0426],
         [0.8711],
         [1.0336]]], device='cuda:0')
After pruning: tensor([[[0.9474],
         [1.0629],
         [0.9922],
         ...,
         [1.0426],
         [0.0000],
         [1.0336]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[0.9474],
         [1.0629],
         [0.9922],
         ...,
         [1.0426],
         [0.0000],
         [1.0336]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.3281],
         [1.2583],
         ...,
         [0.9255],
         [0.0000],
         [0.9108]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[0.0000],
         [1.3281],
         [1.2583],
         ...,
         [0.9255],
         [0.0000],
         [0.9108]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.3201],
         [1.4337],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[0.0000],
         [1.3201],
         [1.4337],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.6356],
         [1.4373],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

4_0.32
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[1.0430],
         [1.0249],
         [0.9932],
         ...,
         [0.9012],
         [0.9271],
         [1.0083]]], device='cuda:0')
After pruning: tensor([[[1.0430],
         [1.0249],
         [0.9932],
         ...,
         [0.0000],
         [0.0000],
         [1.0083]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[1.0430],
         [1.0249],
         [0.9932],
         ...,
         [0.0000],
         [0.0000],
         [1.0083]]], device='cuda:0')
After pruning: tensor([[[1.4116],
         [1.3383],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.9761]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[1.4116],
         [1.3383],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.9761]]], device='cuda:0')
After pruning: tensor([[[1.7160],
         [1.6970],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
4
Before pruning: tensor([[[1.7160],
         [1.6970],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[1.7953],
         [1.9653],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 4_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

5_0.02
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[1.0423],
         [0.9303],
         [1.0028],
         ...,
         [1.0188],
         [0.8250],
         [1.0338]]], device='cuda:0')
After pruning: tensor([[[1.0423],
         [0.9303],
         [1.0028],
         ...,
         [1.0188],
         [0.0000],
         [1.0338]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[1.0423],
         [0.9303],
         [1.0028],
         ...,
         [1.0188],
         [0.0000],
         [1.0338]]], device='cuda:0')
After pruning: tensor([[[0.9258],
         [1.0977],
         [0.9891],
         ...,
         [1.1151],
         [0.0000],
         [1.0631]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[0.9258],
         [1.0977],
         [0.9891],
         ...,
         [1.1151],
         [0.0000],
         [1.0631]]], device='cuda:0')
After pruning: tensor([[[1.0155],
         [1.1581],
         [1.1092],
         ...,
         [1.1577],
         [0.0000],
         [1.0584]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[1.0155],
         [1.1581],
         [1.1092],
         ...,
         [1.1577],
         [0.0000],
         [1.0584]]], device='cuda:0')
After pruning: tensor([[[1.3024],
         [1.0830],
         [1.3563],
         ...,
         [1.0308],
         [0.0000],
         [1.0726]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[1.3024],
         [1.0830],
         [1.3563],
         ...,
         [1.0308],
         [0.0000],
         [1.0726]]], device='cuda:0')
After pruning: tensor([[[1.3129],
         [1.2398],
         [1.3944],
         ...,
         [1.0228],
         [0.0000],
         [1.0029]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

5_0.04
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[1.0480],
         [0.9857],
         [0.9423],
         ...,
         [1.0169],
         [0.9425],
         [1.0868]]], device='cuda:0')
After pruning: tensor([[[1.0480],
         [0.9857],
         [0.9423],
         ...,
         [1.0169],
         [0.9425],
         [1.0868]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[1.0480],
         [0.9857],
         [0.9423],
         ...,
         [1.0169],
         [0.9425],
         [1.0868]]], device='cuda:0')
After pruning: tensor([[[1.0798],
         [1.0793],
         [1.1816],
         ...,
         [1.0665],
         [0.7027],
         [0.9478]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[1.0798],
         [1.0793],
         [1.1816],
         ...,
         [1.0665],
         [0.7027],
         [0.9478]]], device='cuda:0')
After pruning: tensor([[[1.2450],
         [1.2673],
         [1.3307],
         ...,
         [1.0015],
         [0.0000],
         [0.8877]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[1.2450],
         [1.2673],
         [1.3307],
         ...,
         [1.0015],
         [0.0000],
         [0.8877]]], device='cuda:0')
After pruning: tensor([[[1.3538],
         [1.4283],
         [1.5642],
         ...,
         [0.9838],
         [0.0000],
         [0.9220]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[1.3538],
         [1.4283],
         [1.5642],
         ...,
         [0.9838],
         [0.0000],
         [0.9220]]], device='cuda:0')
After pruning: tensor([[[1.3656],
         [1.6455],
         [1.5923],
         ...,
         [0.9374],
         [0.0000],
         [0.8565]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

5_0.08
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[0.9447],
         [0.9973],
         [1.1621],
         ...,
         [1.0856],
         [0.6668],
         [1.1182]]], device='cuda:0')
After pruning: tensor([[[0.9447],
         [0.9973],
         [1.1621],
         ...,
         [1.0856],
         [0.0000],
         [1.1182]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[0.9447],
         [0.9973],
         [1.1621],
         ...,
         [1.0856],
         [0.0000],
         [1.1182]]], device='cuda:0')
After pruning: tensor([[[1.0812],
         [1.2259],
         [1.1370],
         ...,
         [0.8842],
         [0.0000],
         [1.0427]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[1.0812],
         [1.2259],
         [1.1370],
         ...,
         [0.8842],
         [0.0000],
         [1.0427]]], device='cuda:0')
After pruning: tensor([[[1.3115],
         [1.3565],
         [1.1971],
         ...,
         [0.0000],
         [0.0000],
         [1.0614]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[1.3115],
         [1.3565],
         [1.1971],
         ...,
         [0.0000],
         [0.0000],
         [1.0614]]], device='cuda:0')
After pruning: tensor([[[1.6208],
         [1.5233],
         [1.4462],
         ...,
         [0.0000],
         [0.0000],
         [0.9913]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[1.6208],
         [1.5233],
         [1.4462],
         ...,
         [0.0000],
         [0.0000],
         [0.9913]]], device='cuda:0')
After pruning: tensor([[[1.8140],
         [1.4876],
         [1.5910],
         ...,
         [0.0000],
         [0.0000],
         [1.0297]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

5_0.16
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[0.9870],
         [1.0268],
         [1.0114],
         ...,
         [0.9768],
         [0.7913],
         [1.1365]]], device='cuda:0')
After pruning: tensor([[[0.9870],
         [1.0268],
         [1.0114],
         ...,
         [0.9768],
         [0.0000],
         [1.1365]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[0.9870],
         [1.0268],
         [1.0114],
         ...,
         [0.9768],
         [0.0000],
         [1.1365]]], device='cuda:0')
After pruning: tensor([[[1.1260],
         [1.2307],
         [1.2186],
         ...,
         [0.9366],
         [0.0000],
         [1.0915]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[1.1260],
         [1.2307],
         [1.2186],
         ...,
         [0.9366],
         [0.0000],
         [1.0915]]], device='cuda:0')
After pruning: tensor([[[1.3812],
         [1.4045],
         [1.3735],
         ...,
         [0.0000],
         [0.0000],
         [1.2081]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[1.3812],
         [1.4045],
         [1.3735],
         ...,
         [0.0000],
         [0.0000],
         [1.2081]]], device='cuda:0')
After pruning: tensor([[[1.5460],
         [1.6061],
         [1.7472],
         ...,
         [0.0000],
         [0.0000],
         [1.2553]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[1.5460],
         [1.6061],
         [1.7472],
         ...,
         [0.0000],
         [0.0000],
         [1.2553]]], device='cuda:0')
After pruning: tensor([[[1.4914],
         [1.6844],
         [1.7660],
         ...,
         [0.0000],
         [0.0000],
         [1.2335]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

5_0.32
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[0.9661],
         [0.9060],
         [1.0327],
         ...,
         [0.9103],
         [0.8919],
         [1.0775]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.0327],
         ...,
         [0.0000],
         [0.0000],
         [1.0775]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[0.0000],
         [0.0000],
         [1.0327],
         ...,
         [0.0000],
         [0.0000],
         [1.0775]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.4513],
         ...,
         [0.0000],
         [0.0000],
         [0.8230]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[0.0000],
         [0.0000],
         [1.4513],
         ...,
         [0.0000],
         [0.0000],
         [0.8230]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.5824],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[0.0000],
         [0.0000],
         [1.5824],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.6380],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
5
Before pruning: tensor([[[0.0000],
         [0.0000],
         [1.6380],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.5853],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 5_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

6_0.02
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.0541],
         [0.9684],
         [1.2263],
         ...,
         [1.0961],
         [0.9012],
         [1.0449]]], device='cuda:0')
After pruning: tensor([[[1.0541],
         [0.9684],
         [1.2263],
         ...,
         [1.0961],
         [0.9012],
         [1.0449]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.0541],
         [0.9684],
         [1.2263],
         ...,
         [1.0961],
         [0.9012],
         [1.0449]]], device='cuda:0')
After pruning: tensor([[[1.1804],
         [1.0535],
         [1.0712],
         ...,
         [1.0036],
         [0.9736],
         [0.8751]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.1804],
         [1.0535],
         [1.0712],
         ...,
         [1.0036],
         [0.9736],
         [0.8751]]], device='cuda:0')
After pruning: tensor([[[1.1363],
         [1.0459],
         [1.0766],
         ...,
         [1.0832],
         [1.0535],
         [0.8643]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.1363],
         [1.0459],
         [1.0766],
         ...,
         [1.0832],
         [1.0535],
         [0.8643]]], device='cuda:0')
After pruning: tensor([[[1.2619],
         [1.2367],
         [1.2912],
         ...,
         [1.0687],
         [1.1807],
         [0.9207]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.2619],
         [1.2367],
         [1.2912],
         ...,
         [1.0687],
         [1.1807],
         [0.9207]]], device='cuda:0')
After pruning: tensor([[[1.4194],
         [1.4712],
         [1.4818],
         ...,
         [1.0110],
         [1.2637],
         [0.7318]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.4194],
         [1.4712],
         [1.4818],
         ...,
         [1.0110],
         [1.2637],
         [0.7318]]], device='cuda:0')
After pruning: tensor([[[1.4263],
         [1.5074],
         [1.5613],
         ...,
         [1.1466],
         [1.1916],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

6_0.04
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[0.9447],
         [0.9598],
         [1.1246],
         ...,
         [0.9594],
         [0.8158],
         [1.0303]]], device='cuda:0')
After pruning: tensor([[[0.9447],
         [0.9598],
         [1.1246],
         ...,
         [0.9594],
         [0.0000],
         [1.0303]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[0.9447],
         [0.9598],
         [1.1246],
         ...,
         [0.9594],
         [0.0000],
         [1.0303]]], device='cuda:0')
After pruning: tensor([[[0.9794],
         [1.0958],
         [1.1973],
         ...,
         [0.7646],
         [0.0000],
         [1.0501]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[0.9794],
         [1.0958],
         [1.1973],
         ...,
         [0.7646],
         [0.0000],
         [1.0501]]], device='cuda:0')
After pruning: tensor([[[1.1445],
         [1.1149],
         [1.4796],
         ...,
         [0.0000],
         [0.0000],
         [1.0719]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.1445],
         [1.1149],
         [1.4796],
         ...,
         [0.0000],
         [0.0000],
         [1.0719]]], device='cuda:0')
After pruning: tensor([[[1.2751],
         [1.2414],
         [1.5266],
         ...,
         [0.0000],
         [0.0000],
         [1.1385]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.2751],
         [1.2414],
         [1.5266],
         ...,
         [0.0000],
         [0.0000],
         [1.1385]]], device='cuda:0')
After pruning: tensor([[[1.3901],
         [1.4637],
         [1.5747],
         ...,
         [0.0000],
         [0.0000],
         [1.1016]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.3901],
         [1.4637],
         [1.5747],
         ...,
         [0.0000],
         [0.0000],
         [1.1016]]], device='cuda:0')
After pruning: tensor([[[1.3379],
         [1.5527],
         [1.6100],
         ...,
         [0.0000],
         [0.0000],
         [1.1470]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

6_0.08
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[0.9904],
         [0.9126],
         [1.0351],
         ...,
         [1.0403],
         [0.7974],
         [1.0616]]], device='cuda:0')
After pruning: tensor([[[0.9904],
         [0.9126],
         [1.0351],
         ...,
         [1.0403],
         [0.0000],
         [1.0616]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[0.9904],
         [0.9126],
         [1.0351],
         ...,
         [1.0403],
         [0.0000],
         [1.0616]]], device='cuda:0')
After pruning: tensor([[[1.0313],
         [0.0000],
         [1.2496],
         ...,
         [1.1834],
         [0.0000],
         [0.9769]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.0313],
         [0.0000],
         [1.2496],
         ...,
         [1.1834],
         [0.0000],
         [0.9769]]], device='cuda:0')
After pruning: tensor([[[1.2582],
         [0.0000],
         [1.3228],
         ...,
         [0.9301],
         [0.0000],
         [0.9444]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.2582],
         [0.0000],
         [1.3228],
         ...,
         [0.9301],
         [0.0000],
         [0.9444]]], device='cuda:0')
After pruning: tensor([[[1.4864],
         [0.0000],
         [1.6300],
         ...,
         [0.9044],
         [0.0000],
         [0.8134]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.4864],
         [0.0000],
         [1.6300],
         ...,
         [0.9044],
         [0.0000],
         [0.8134]]], device='cuda:0')
After pruning: tensor([[[1.6744],
         [0.0000],
         [1.7611],
         ...,
         [1.1247],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.6744],
         [0.0000],
         [1.7611],
         ...,
         [1.1247],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[1.9322],
         [0.0000],
         [1.8760],
         ...,
         [0.9398],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

6_0.16
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.0424],
         [1.0195],
         [0.9539],
         ...,
         [1.0344],
         [0.8072],
         [0.9855]]], device='cuda:0')
After pruning: tensor([[[1.0424],
         [1.0195],
         [0.9539],
         ...,
         [1.0344],
         [0.0000],
         [0.9855]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.0424],
         [1.0195],
         [0.9539],
         ...,
         [1.0344],
         [0.0000],
         [0.9855]]], device='cuda:0')
After pruning: tensor([[[1.0447],
         [1.0634],
         [0.0000],
         ...,
         [0.9072],
         [0.0000],
         [0.9134]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.0447],
         [1.0634],
         [0.0000],
         ...,
         [0.9072],
         [0.0000],
         [0.9134]]], device='cuda:0')
After pruning: tensor([[[1.0483],
         [1.2665],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.0483],
         [1.2665],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[1.4457],
         [1.4350],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.4457],
         [1.4350],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[1.7021],
         [1.6526],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[1.7021],
         [1.6526],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[1.7747],
         [1.7355],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

6_0.32
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[0.9607],
         [1.0058],
         [0.9825],
         ...,
         [0.9919],
         [0.8865],
         [1.0423]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.0058],
         [0.9825],
         ...,
         [0.9919],
         [0.0000],
         [1.0423]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[0.0000],
         [1.0058],
         [0.9825],
         ...,
         [0.9919],
         [0.0000],
         [1.0423]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.0552],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [1.0092]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[0.0000],
         [1.0552],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [1.0092]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.1709],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[0.0000],
         [1.1709],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.1675],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[0.0000],
         [1.1675],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.1579],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
6
Before pruning: tensor([[[0.0000],
         [1.1579],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [1.2342],
         [0.0000],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 6_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

7_0.02
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.9393],
         [0.9705],
         [0.9658],
         ...,
         [0.9770],
         [0.9055],
         [1.1197]]], device='cuda:0')
After pruning: tensor([[[0.9393],
         [0.9705],
         [0.9658],
         ...,
         [0.9770],
         [0.9055],
         [1.1197]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.9393],
         [0.9705],
         [0.9658],
         ...,
         [0.9770],
         [0.9055],
         [1.1197]]], device='cuda:0')
After pruning: tensor([[[0.9441],
         [1.0269],
         [1.1619],
         ...,
         [1.0501],
         [0.7341],
         [1.0576]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.9441],
         [1.0269],
         [1.1619],
         ...,
         [1.0501],
         [0.7341],
         [1.0576]]], device='cuda:0')
After pruning: tensor([[[1.0455],
         [1.3153],
         [1.2212],
         ...,
         [1.0947],
         [0.0000],
         [0.9795]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.0455],
         [1.3153],
         [1.2212],
         ...,
         [1.0947],
         [0.0000],
         [0.9795]]], device='cuda:0')
After pruning: tensor([[[1.1932],
         [1.3469],
         [1.3054],
         ...,
         [1.1275],
         [0.0000],
         [0.9915]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.1932],
         [1.3469],
         [1.3054],
         ...,
         [1.1275],
         [0.0000],
         [0.9915]]], device='cuda:0')
After pruning: tensor([[[1.3492],
         [1.3003],
         [1.3722],
         ...,
         [1.2618],
         [0.0000],
         [0.9620]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.3492],
         [1.3003],
         [1.3722],
         ...,
         [1.2618],
         [0.0000],
         [0.9620]]], device='cuda:0')
After pruning: tensor([[[1.2349],
         [1.5456],
         [1.4811],
         ...,
         [1.1193],
         [0.0000],
         [1.0452]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.2349],
         [1.5456],
         [1.4811],
         ...,
         [1.1193],
         [0.0000],
         [1.0452]]], device='cuda:0')
After pruning: tensor([[[1.2548],
         [1.7241],
         [1.3972],
         ...,
         [1.0290],
         [0.0000],
         [1.0010]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.02
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

7_0.04
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.0723],
         [0.9562],
         [0.9550],
         ...,
         [0.9936],
         [0.8962],
         [1.0725]]], device='cuda:0')
After pruning: tensor([[[1.0723],
         [0.9562],
         [0.9550],
         ...,
         [0.9936],
         [0.8962],
         [1.0725]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.0723],
         [0.9562],
         [0.9550],
         ...,
         [0.9936],
         [0.8962],
         [1.0725]]], device='cuda:0')
After pruning: tensor([[[1.1088],
         [1.1850],
         [1.2555],
         ...,
         [1.0395],
         [0.0000],
         [1.0106]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.1088],
         [1.1850],
         [1.2555],
         ...,
         [1.0395],
         [0.0000],
         [1.0106]]], device='cuda:0')
After pruning: tensor([[[1.2590],
         [1.3790],
         [1.2767],
         ...,
         [1.0615],
         [0.0000],
         [1.0147]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.2590],
         [1.3790],
         [1.2767],
         ...,
         [1.0615],
         [0.0000],
         [1.0147]]], device='cuda:0')
After pruning: tensor([[[1.2238],
         [1.6809],
         [1.2750],
         ...,
         [1.0593],
         [0.0000],
         [0.9487]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.2238],
         [1.6809],
         [1.2750],
         ...,
         [1.0593],
         [0.0000],
         [0.9487]]], device='cuda:0')
After pruning: tensor([[[1.5038],
         [1.7007],
         [1.3779],
         ...,
         [1.0030],
         [0.0000],
         [1.0916]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.5038],
         [1.7007],
         [1.3779],
         ...,
         [1.0030],
         [0.0000],
         [1.0916]]], device='cuda:0')
After pruning: tensor([[[1.6570],
         [1.6692],
         [1.4395],
         ...,
         [0.8544],
         [0.0000],
         [0.9676]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.6570],
         [1.6692],
         [1.4395],
         ...,
         [0.8544],
         [0.0000],
         [0.9676]]], device='cuda:0')
After pruning: tensor([[[1.7069],
         [1.7657],
         [1.5902],
         ...,
         [0.9970],
         [0.0000],
         [1.0659]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.04
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

7_0.08
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.9145],
         [0.9283],
         [1.0108],
         ...,
         [0.9745],
         [0.9698],
         [1.0844]]], device='cuda:0')
After pruning: tensor([[[0.9145],
         [0.9283],
         [1.0108],
         ...,
         [0.9745],
         [0.9698],
         [1.0844]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.9145],
         [0.9283],
         [1.0108],
         ...,
         [0.9745],
         [0.9698],
         [1.0844]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.1853],
         ...,
         [0.8486],
         [0.8655],
         [0.9470]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.0000],
         [0.0000],
         [1.1853],
         ...,
         [0.8486],
         [0.8655],
         [0.9470]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.2166],
         ...,
         [0.0000],
         [0.0000],
         [0.8377]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.0000],
         [0.0000],
         [1.2166],
         ...,
         [0.0000],
         [0.0000],
         [0.8377]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.4546],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.0000],
         [0.0000],
         [1.4546],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.6057],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.0000],
         [0.0000],
         [1.6057],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.7911],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.0000],
         [0.0000],
         [1.7911],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.6975],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.08
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

7_0.16
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.9523],
         [0.9128],
         [0.9847],
         ...,
         [1.0579],
         [0.7374],
         [1.0269]]], device='cuda:0')
After pruning: tensor([[[0.9523],
         [0.0000],
         [0.9847],
         ...,
         [1.0579],
         [0.0000],
         [1.0269]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.9523],
         [0.0000],
         [0.9847],
         ...,
         [1.0579],
         [0.0000],
         [1.0269]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.1634],
         ...,
         [1.0423],
         [0.0000],
         [0.9434]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.0000],
         [0.0000],
         [1.1634],
         ...,
         [1.0423],
         [0.0000],
         [0.9434]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.3651],
         ...,
         [0.8733],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.0000],
         [0.0000],
         [1.3651],
         ...,
         [0.8733],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.5405],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.0000],
         [0.0000],
         [1.5405],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.5308],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.0000],
         [0.0000],
         [1.5308],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.5414],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[0.0000],
         [0.0000],
         [1.5414],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[0.0000],
         [0.0000],
         [1.5999],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.16
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

7_0.32
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.0494],
         [1.1285],
         [1.0258],
         ...,
         [1.1103],
         [0.8127],
         [1.0981]]], device='cuda:0')
After pruning: tensor([[[1.0494],
         [1.1285],
         [1.0258],
         ...,
         [1.1103],
         [0.0000],
         [1.0981]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.0494],
         [1.1285],
         [1.0258],
         ...,
         [1.1103],
         [0.0000],
         [1.0981]]], device='cuda:0')
After pruning: tensor([[[1.1595],
         [1.4976],
         [1.1939],
         ...,
         [1.1939],
         [0.0000],
         [1.2027]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.1595],
         [1.4976],
         [1.1939],
         ...,
         [1.1939],
         [0.0000],
         [1.2027]]], device='cuda:0')
After pruning: tensor([[[1.2877],
         [1.5381],
         [1.2279],
         ...,
         [1.0965],
         [0.0000],
         [1.0165]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.2877],
         [1.5381],
         [1.2279],
         ...,
         [1.0965],
         [0.0000],
         [1.0165]]], device='cuda:0')
After pruning: tensor([[[1.3131],
         [1.5934],
         [1.3635],
         ...,
         [1.0684],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.3131],
         [1.5934],
         [1.3635],
         ...,
         [1.0684],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[1.4260],
         [1.6030],
         [1.3402],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.4260],
         [1.6030],
         [1.3402],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[1.3906],
         [1.6712],
         [1.5254],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Here we go again...
7
Before pruning: tensor([[[1.3906],
         [1.6712],
         [1.5254],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
After pruning: tensor([[[1.4404],
         [1.7395],
         [1.5963],
         ...,
         [0.0000],
         [0.0000],
         [0.0000]]], device='cuda:0')
--- Training Metadata ---
Code: n=48, k=6, PCM rows=1000,1000
device: cuda
training ep0 = 0.1
Decoder: 7_0.32
decoding iterations = 6
number of batches = 1500
error patterns per batch = 100
learning rate = 0.001

training on random errors, weight from 2 to 3 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

training on random errors, weight from 3 to 9 
  weights saved to weights_cn.pt,weights_vn.pt, and weights_llr.pt.

Training completed.

Training and pruning completed.

